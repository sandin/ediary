<?php
require_once 'PHPUnit/Framework.php';

// 注册全局函数是否能被注册
function functionToRegister() {
    var_dump(__FUNCTION__);
    return true;
}

/**
 * Test class for Ediary_User.
 * Generated by PHPUnit on 2011-02-26 at 14:23:54.
 */
class Ediary_HooksTest extends ControllerTestCase
{
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        parent::setUp();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }
    
    // 用于注册HOOK用
    public function functionToRegister() {
        var_dump(__CLASS__);
        return __CLASS__;
    }
    public function functionToRegister2() {
        var_dump(__CLASS__);
        return __CLASS__;
    }
    public function functionToRegister3($param = null) {
        $this->assertNotNull($param);
        var_dump(__CLASS__);
        return __CLASS__;
    }
    
    public function testA() {
        $event = "onNodeCreate";
        
        // register a hook (use Function)
        $this->assertFalse(Ediary_Hooks::hasRegister($event)); // preCheck
        Ediary_Hooks::register($event, 'functionToRegister');
        $this->assertTrue(Ediary_Hooks::hasRegister($event)); // postCheck
        
        // notity
        $count = Ediary_Hooks::notify($event);
        $this->assertEquals(1, $count);
        
        ////////////////////////////////
        
        $event2 = "onNodeDelete";
        
        // register two hook (use class method)
        $this->assertFalse(Ediary_Hooks::hasRegister($event2)); // preCheck
        Ediary_Hooks::register($event2, array($this, 'functionToRegister'));
        Ediary_Hooks::register($event2, array($this, 'functionToRegister2'));
        $this->assertTrue(Ediary_Hooks::hasRegister($event2)); // preCheck
        
        // notity
        $count2 = Ediary_Hooks::notify($event2);
        $this->assertEquals(2, $count2);
        
        ////////////////////////////////
        
        // test with params
        
        $event3 = "onUserLogin";
        Ediary_Hooks::register($event3, array($this, 'functionToRegister3'));
        Ediary_Hooks::notify($event3, array("arg1, arg2"));
    }
    
}