<?php
require_once 'PHPUnit/Framework.php';

/**
 * Test class for Ediary_User.
 * Generated by PHPUnit on 2011-02-26 at 14:23:54.
 */
class Ediary_MetadataTest extends ControllerTestCase
{
    /**
     * @var Ediary_Metadata
     */
    protected $object;
    
    protected $data = array();
    
    public function dataProvider() {
        return array(
            array('settings1', 'settings1-value'),
            array('settings2', 'settings2-value'),
            array('settings3', 'settings3-value'),
        );
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        parent::setUp();
        $this->object = new Ediary_Metadata('usermeta', 'user_id', 3);
        
        $r = substr(microtime(), 3, 7); // random string
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }
    
    /**
     * @dataProvider dataProvider
     */
    public function testAll($key, $value) {
        $metadata = $this->object;
        $metadata->delete(); // reset
        $update = "change 1";
        
        $row1 = $metadata->insert($key, $value);
        $this->assertEquals($row1, 1); // only one row affected
        
        // test find also
        $this->assertEquals($value, $metadata->find($key));
        $this->assertTrue($metadata->isExists($key));
        
        // test update
        $row2 = $metadata->update($key, $update);
        $this->assertEquals(1, $row2); // only one row affected
        $this->assertEquals($update, $metadata->find($key));
        
        // test delete
        $metadata->delete($key);
        $this->assertFalse($metadata->isExists($key));
        $this->assertNull($metadata->find($key));
    }
    
    public function dataProviderForGetAll() {
        return array(
            array('settings1-1', 'settings1-values', 'settings2-1', 'settings2-values'),
            array('settings1-2', 'settings1-values', 'settings2-1', 'settings2-values'),
        );
        
    }
    
    /**
     * @dataProvider dataProviderForGetAll
     */
    public function testGetAll($k1, $v1, $k2, $v2) {
        $metadata = $this->object;
        $metadata->delete();
        $r1 = $metadata->insert($k1, $v1);
        $r2 = $metadata->insert($k2, $v2);
        $this->assertEquals(1, $r1); // only one row affected
        $this->assertEquals(1, $r2);
        
        $usermeta = Ediary_Metadata::getAll('usermeta', 'user_id', 3);
        $this->assertTrue(is_array($usermeta));
        $this->assertEquals(2, count($usermeta));
        //var_dump($usermeta);
    }
    
}