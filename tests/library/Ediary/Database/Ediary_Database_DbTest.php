<?php
require_once 'PHPUnit/Framework.php';

/**
 * Test class for Ediary_Database_Db.
 * Generated by PHPUnit on 2011-02-23 at 16:38:18.
 */
class Ediary_Database_DbTest extends ControllerTestCase
{
    /**
     * @var Ediary_Database_Db
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    public function setUp()
    {
        parent::setUp();
        $conn = Zend_Db_Table::getDefaultAdapter();
        $this->assertNotNull($conn);
         
        $this->object = Ediary_Database_Db::getInstance()->setConnection($conn);
        $this->assertTrue( $this->object->connect() );
        
        // DEBUG: THIS WILL DROP TABLES AND RECREATE THEM
        //Ediary_Database_Db::getInstance()->upgrade();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        if (NULL !== $this->object)
        $this->object->close();
    }


    public function testGetConfig() {
        $db = $this->object;
         
        $db_config = $db->getConfig();
        $this->assertNotNull($db_config->username);
        $this->assertNotNull($db_config->dbname);
    }

    /**
     */
    public function testCreate()
    {
        $this->object->create();
         
        $this->assertTrue( $this->object->isInstalled() );
    }


    /**
     * @todo Implement testUpgrade().
     */
    public function testUpgrade()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
          );
    }

    /**
     * @todo Implement testClose().
     */
    public function testClose()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
          );
    }

    public function testSetPrefix() {
        $prefix = 'prefix_';
        $this->object->setPrefix($prefix);
         
        $this->assertEquals($prefix . 'users', $this->object->users);
        $this->assertEquals($prefix . 'diarys', $this->object->diarys);
        $this->assertEquals($prefix . 'journals', $this->object->journals);
    }

    public function testGetDbName() {
        $this->assertNotNull( $this->object->getConfig()->dbname );
    }
    
    public function testToday() {
        $today = Ediary_Database_Db::today();
        $today_expect = date('Y-m-d') . ' 00:00:00';
        $this->assertEquals($today_expect, $today);
    }

}
?>
