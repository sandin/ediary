<?xml version="1.0" encoding="UTF-8"?>
<project name="ediary" default="default">
    <description>
            description
    </description>

	<property file="build.properties" />

	<target name="init">
		<mkdir dir="${build.dir}" />
	</target>

	<target name="default" depends="minify">
	</target>

	<!-- prepare file to upload -->
    <target name="upload" depends="minify">
    	<delete dir="${dest.dir}" />
    	<mkdir dir="${dest.dir}" />
    	<copy todir="${dest.dir}">
    	    <fileset dir="./">
    	 	  <include name="application/**" />
    	 	  <include name="library/**" />
    	 	  <include name="public/**" />
    		</fileset>
    	</copy>
    	<copy todir="${dest.dir}/library">
    		 <fileset dir="${zend.dir}">
    		  <include name="Zend/**" />
    		 </fileset>
    	</copy>
    	<zip destfile="${dest.dir}/auto-package.zip" basedir="${dest.dir}"></zip>
    </target>

    <property name="concatenated" value="all" />
    <property name="core.files" value="jquery.hotkeys.js, Ediary.js, Ediary-Events.js" />
    <property name="js.dir" value="${public.dir}/js/ediary" />
    <property name="js.src.dir" value="${js.dir}/development" />

	<target name="clean" description="clean up">
		<delete dir="${build.dir}" />
	</target>

    <target name="concatenate">
        <echo message="正在合并js文件" />
        <!-- 删除上次生成的文件-->
        <delete file="${js.dir}/${concatenated}.js" />

         <!-- *.js => all.js -->
        <concat destfile="${js.dir}/${concatenated}.js">
            <filelist dir="${js.src.dir}" files="${core.files}" />
            <fileset dir="${js.src.dir}" includes="*.js" excludes="${core.files}" />
        </concat>
    </target>

    <!-- 压缩JS/CSS -->
    <target name="minify" depends="concatenate" description="minfify files">
        <echo message="正在压缩JS/CSS..." />
        <delete file="${js.dir}/${concatenated}.min.js" />

        <!-- 删除临时文件 -->
        <delete>
            <fileset dir="${js.dir}">
                <include name="*.tmp.js" />
            </fileset>
        </delete>

         <!-- 删除js代码中console.log等非生产环境信息 -->
         <!-- all.js -> all.tmp.js -->
        <apply executable="java" parallel="false">
            <fileset dir="${js.dir}">
                <include name="*.js" />
                <exclude name="*.min.js" />
            </fileset>
			<arg line="-jar" />
			<arg path="${minityJs-jar}" />
            <arg value="-o" />
            <mapper type="glob" from="*.js" to="${js.dir}/*.tmp.js" />
			<targetfile />
		</apply>

        <!-- minify javascript files -->
         <!-- all.tmp.js -> all.min.js -->
        <apply executable="java" parallel="false">
            <fileset dir="${js.dir}">
                <include name="*.tmp.js" />
            </fileset>
			<arg line="-jar" />
			<arg path="${closure-jar}" />
            <arg value="--warning_level" />
            <arg value="QUIET" />
			<arg value="--compilation_level" />
			<arg value="SIMPLE_OPTIMIZATIONS" />
			<arg value="--js_output_file" />
			<targetfile />
			<arg value="--js" />
            <mapper type="glob" from="*.tmp.js" to="${js.dir}/*.min.js" />
		</apply>

       

        <!-- minify css files -->
        <apply executable="java" parallel="false">
            <fileset dir="${public.dir}/css">
                <include name="*.css" />
                <exclude name="*.min.css" />
            </fileset>
			<arg line="-jar" />
			<arg path="${yuicompressor-jar}" />
			<arg line="--charset utf-8" />
			<arg line="-v" />
			<srcfile />
			<arg line="-o" />
			<mapper type="glob" from="*.css" to="${public.dir}/css/*.min.css" />
			<targetfile/>
		</apply>

    </target>

    <!-- 生成文档 -->
	<target name="docs" depends="init" description="create api docs">
        <echo message="正在生成文档..." />
        <delete dir="${docs.dir}/html" />
        <mkdir dir="${docs.dir}/html" />

        <apply executable="${asciidoc}" parallel="false">
			<fileset dir="${docs.dir}" includes="*.asciidoc.txt" />
	        <arg line="-a" />
			<arg line="toc" />
			<arg line="-n" />
			<arg line="-o" />
			<mapper type="glob" from="*.asciidoc.txt" to="${docs.dir}/html/*.html" />
			<targetfile/>
        </apply>
	</target>

</project>
